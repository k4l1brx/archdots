## wm independent hotkeys

#lock 
super + ctrl + alt + l
	i3lock -i ~/Pictures/My_Wallpapers/Arch-2.png

# terminal emulator
super + Return
	alacritty
# program launcher
super + e
	~/.scripts/rofi_emo_launcher.sh
super + p
	~/.scripts/rofi_app_launcher.sh

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys



# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# Swap with the biggest node
super + g
	bspc node -s biggest.local
# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
#super + g
	#bspc node -s biggest

# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + shift + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
#super + {grave,Tab}
#	bspc {node,desktop} -f last
super + Tab
	rofi -show window -modi window -show-icons \
	 -color-window "#222222, #222222, #b1b4b3" \
	 -color-normal "#222222, #b1b4b3, #222222, #005577, #b1b4b3" \
	 -color-active "#222222, #b1b4b3, #222222, #007763, #b1b4b3" \
	 -color-urgent "#222222, #b1b4b3, #222222, #77003d, #b1b4b3"

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# move 
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -100 0,bottom 0 100,top 0 -100,right 100 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -100 0,top 0 100,bottom 0 -100,left 100 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
super + b
	bspc node -B
# bring up programs
super + shift + o
	firefox
# Volume Up and Down
# Raises volume
XF86AudioRaiseVolume
	amixer set Master 2%+

# Lowers volume
XF86AudioLowerVolume
	amixer set Master 2%-

#Monitor Brightness
XF86MonBrightness{Up,Down}
	xbacklight {-inc 10,-dec 10}

# Screenshot

#{shift + ,_} Print
#	scrot {--select,_} '%F_%H-%M-%S_$wx$h.png' -e 'mv $f ~/Pictures/Screenshots/%F_%H-%M-%S_$wx$h.png' && notify-send 'Screenshot captured'
#ctrl + shift + Print
#	scrot --select '%F_%H-%M-%S_$wx$h.png' -e 'mv $f ~/Pictures/Screenshots/%F_%H-%M-%S_$wx$h.png' && notify-send 'Screenshot captured'

super + Print
	maim ~/Pictures/Screenshots/$(date +%s).png | notify-send "Taken" -t 1000

super + shift + Print
	maim -s ~/Pictures/Screenshots/$(date +%s).png | notify-send "Cropping..." -t 5000
  #scrot {--select,_} '%F_%H-%M-%S_$wx$h.png' -e 'mv $f ~/vault/screenshots/ ' && notify-send 'Screenshot captured'
#@Print
#  maim "/tmp/$(date +%W.%A)-scrot$(date +%s | tail -c 5).png" && \
#  notify-send -a maim "Took a screenshot (full screen)."
#ctrl + @Print
#  maim -i $(xdotool getactivewindow) "/tmp/$(date +%W.%A)-window$(date +%s | tail -c 5).png" && \
#  notify-send -a maim "Took a screenshot (window)."
#ctrl + shift + @Print
#  maim -s -c 0.1,0.05,0.3,1 "/tmp/$(date +%W.%A)-slop$(date +%s | tail -c 5).png" && \
#  notify-send -a maim "Took a screenshot (area)."

# Keyboard layout
super + ctrl + shift + A
	bash ~/.config/sxhkd/Toggle.sh

# Dropdown terminal 1
super + u
	~/.scripts/bspwm/scratchpad.sh dropdown
